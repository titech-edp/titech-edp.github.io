# dot -T png edp-toolkit.dot -o edp-toolkit.png

digraph graph_name {
	graph [
	       rankdir = LR;
	       nodesep = 0.7;
	];
	edge [
		style = bold;
		shape = oval;
	];
	node [
		style = bold;
		fontsize = 18;
	];

	Input [
	       label = "Input|a. Interview \l|b. Observation \l|c. Role Playing \l|d. Case Study Analysis \l|e. Trend Analysis \l",
	       shape = record,
	];
	Output [
	       label = "Output|a. Product \l|b. Process \l|c. Pitch \l|d. Plot \l|e. Poster \l",
	       shape = record,
	];


	CJM[label = "1. Journey Map"];
	Needs[label = "2. Needs"];
	Insight[label = "3. Insight"];
	HMWQ[label = "4. HMWQ"];
	DP [label = "5. Design Principles"];
	Sketch [label = "6. Product Sketch"];
	Story [label = "7. Usage Scenario"];
	MVP [label = "8. MVP Experimental Plan"];
	Test [label = "9. User Test"];

# connect
	Input -> CJM [
		tailport = ne,
		headport = nw
	];

	CJM -> Needs;
	Needs -> Insight;
	Insight -> HMWQ;
//	HMWQ -> DP;
//	DP -> Sketch;

Sketch -> DP [dir = back];
DP -> HMWQ [dir = back];

	Sketch -> Story;
	Story -> MVP;
	MVP -> Test;
	Test -> MVP;

	Test -> Output [
		taillabel = "ðŸŽ‰",
		labeldistance = 5,
		tailport = e,
		headport = sw
	];

# Label
	node [shape = plaintext];
	POV [label = "POVðŸ‘€"];
	Idea [label = "IdeaðŸ’¡"];
//	Fin [label = ];

//	Insight -> POV[color = white];
//	Sketch -> Idea[color = white];
//	Test -> Fin[color = white];

# Ranking
	{rank = min; Input}
	{rank = same;
		CJM;
		Needs;
		Insight;
		POV
	}
	{rank = same;
		HMWQ;
		DP;
		Sketch;
		Idea
	}
	{rank = same;
		Story;
		MVP;
		Test;
//		Fin
	}
	{rank = sink; Output}

# NG
	edge[ color = "#999999"];
	Insight -> Input [
		taillabel = "[NG]",
		labeldistance = 4,
		style = dashed,
		arrowhead = curve,
		headport = se
	];
	Sketch -> CJM [
		taillabel = "[NG]",
		labeldistance = 3,
		style = dashed,
		arrowhead = curve
	];
	Test -> HMWQ [
		taillabel = "[NG]",
		labeldistance = 3,
		style = dashed,
		arrowhead = curve
	];

	Output -> Story[
		taillabel = "Refinements",
		labeldistance = 3,
		style = dashed,
		arrowhead = curve,
		tailport = n,
		headport = n
	];

}
